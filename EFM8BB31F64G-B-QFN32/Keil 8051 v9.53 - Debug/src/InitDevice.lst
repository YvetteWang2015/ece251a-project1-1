C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 17:10:40 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src/InitDevice.OBJ
COMPILER INVOKED BY: Z:\Applications\Simplicity Studio.app\Contents\Eclipse\developer\toolchains\keil_8051\9.53\BIN\C51.
                    -exe /Users/liaohu/SimplicityStudio/v4_workspace/EFM8BB31F64G-B-QFN32/src/InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(
                    -LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/Users/liaohu
                    -/SimplicityStudio/v4_workspace/EFM8BB31F64G-B-QFN32/inc;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/s
                    -dks/8051/v4.0.3//Device/shared/si8051base;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.0.
                    -3//Device/EFM8BB3/inc) PRINT(.\src/InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB3_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1      
  27   1              PORTS_1_enter_DefaultMode_from_RESET();
  28   1              PBCFG_0_enter_DefaultMode_from_RESET();
  29   1      
  30   1              // Restore the SFRPAGE
  31   1              SFRPAGE = SFRPAGE_save;
  32   1              // [Config Calls]$
  33   1      
  34   1      }
  35          
  36          //================================================================================
  37          // PORTS_1_enter_DefaultMode_from_RESET
  38          //================================================================================
  39          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
  40   1              // $[P1 - Port 1 Pin Latch]
  41   1              /*
  42   1               // B0 (Port 1 Bit 0 Latch) = HIGH (P1.0 is high. Set P1.0 to drive or
  43   1               //     float high.)
  44   1               // B1 (Port 1 Bit 1 Latch) = HIGH (P1.1 is high. Set P1.1 to drive or
  45   1               //     float high.)
  46   1               // B2 (Port 1 Bit 2 Latch) = HIGH (P1.2 is high. Set P1.2 to drive or
  47   1               //     float high.)
  48   1               // B3 (Port 1 Bit 3 Latch) = HIGH (P1.3 is high. Set P1.3 to drive or
  49   1               //     float high.)
  50   1               // B4 (Port 1 Bit 4 Latch) = HIGH (P1.4 is high. Set P1.4 to drive or
  51   1               //     float high.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 17:10:40 PAGE 2   

  52   1               // B5 (Port 1 Bit 5 Latch) = HIGH (P1.5 is high. Set P1.5 to drive or
  53   1               //     float high.)
  54   1               // B6 (Port 1 Bit 6 Latch) = HIGH (P1.6 is high. Set P1.6 to drive or
  55   1               //     float high.)
  56   1               // B7 (Port 1 Bit 7 Latch) = HIGH (P1.7 is high. Set P1.7 to drive or
  57   1               //     float high.)
  58   1               */
  59   1              P1 = P1_B0__HIGH | P1_B1__HIGH | P1_B2__HIGH | P1_B3__HIGH | P1_B4__HIGH
  60   1                              | P1_B5__HIGH | P1_B6__HIGH | P1_B7__HIGH;
  61   1              // [P1 - Port 1 Pin Latch]$
  62   1      
  63   1              // $[P1MDOUT - Port 1 Output Mode]
  64   1              /*
  65   1               // B0 (Port 1 Bit 0 Output Mode) = OPEN_DRAIN (P1.0 output is open-
  66   1               //     drain.)
  67   1               // B1 (Port 1 Bit 1 Output Mode) = OPEN_DRAIN (P1.1 output is open-
  68   1               //     drain.)
  69   1               // B2 (Port 1 Bit 2 Output Mode) = OPEN_DRAIN (P1.2 output is open-
  70   1               //     drain.)
  71   1               // B3 (Port 1 Bit 3 Output Mode) = OPEN_DRAIN (P1.3 output is open-
  72   1               //     drain.)
  73   1               // B4 (Port 1 Bit 4 Output Mode) = PUSH_PULL (P1.4 output is push-pull.)
  74   1               // B5 (Port 1 Bit 5 Output Mode) = PUSH_PULL (P1.5 output is push-pull.)
  75   1               // B6 (Port 1 Bit 6 Output Mode) = PUSH_PULL (P1.6 output is push-pull.)
  76   1               // B7 (Port 1 Bit 7 Output Mode) = OPEN_DRAIN (P1.7 output is open-
  77   1               //     drain.)
  78   1               */
  79   1              P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
  80   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN
  81   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__PUSH_PULL
  82   1                              | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__OPEN_DRAIN;
  83   1              // [P1MDOUT - Port 1 Output Mode]$
  84   1      
  85   1              // $[P1MDIN - Port 1 Input Mode]
  86   1              /*
  87   1               // B0 (Port 1 Bit 0 Input Mode) = DIGITAL (P1.0 pin is configured for
  88   1               //     digital mode.)
  89   1               // B1 (Port 1 Bit 1 Input Mode) = DIGITAL (P1.1 pin is configured for
  90   1               //     digital mode.)
  91   1               // B2 (Port 1 Bit 2 Input Mode) = DIGITAL (P1.2 pin is configured for
  92   1               //     digital mode.)
  93   1               // B3 (Port 1 Bit 3 Input Mode) = DIGITAL (P1.3 pin is configured for
  94   1               //     digital mode.)
  95   1               // B4 (Port 1 Bit 4 Input Mode) = DIGITAL (P1.4 pin is configured for
  96   1               //     digital mode.)
  97   1               // B5 (Port 1 Bit 5 Input Mode) = DIGITAL (P1.5 pin is configured for
  98   1               //     digital mode.)
  99   1               // B6 (Port 1 Bit 6 Input Mode) = DIGITAL (P1.6 pin is configured for
 100   1               //     digital mode.)
 101   1               // B7 (Port 1 Bit 7 Input Mode) = DIGITAL (P1.7 pin is configured for
 102   1               //     digital mode.)
 103   1               */
 104   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 105   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__DIGITAL
 106   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__DIGITAL;
 107   1              // [P1MDIN - Port 1 Input Mode]$
 108   1      
 109   1              // $[P1SKIP - Port 1 Skip]
 110   1              /*
 111   1               // B0 (Port 1 Bit 0 Skip) = NOT_SKIPPED (P1.0 pin is not skipped by the
 112   1               //     crossbar.)
 113   1               // B1 (Port 1 Bit 1 Skip) = NOT_SKIPPED (P1.1 pin is not skipped by the
 114   1               //     crossbar.)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 17:10:40 PAGE 3   

 115   1               // B2 (Port 1 Bit 2 Skip) = NOT_SKIPPED (P1.2 pin is not skipped by the
 116   1               //     crossbar.)
 117   1               // B3 (Port 1 Bit 3 Skip) = NOT_SKIPPED (P1.3 pin is not skipped by the
 118   1               //     crossbar.)
 119   1               // B4 (Port 1 Bit 4 Skip) = SKIPPED (P1.4 pin is skipped by the
 120   1               //     crossbar.)
 121   1               // B5 (Port 1 Bit 5 Skip) = SKIPPED (P1.5 pin is skipped by the
 122   1               //     crossbar.)
 123   1               // B6 (Port 1 Bit 6 Skip) = SKIPPED (P1.6 pin is skipped by the
 124   1               //     crossbar.)
 125   1               // B7 (Port 1 Bit 7 Skip) = NOT_SKIPPED (P1.7 pin is not skipped by the
 126   1               //     crossbar.)
 127   1               */
 128   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__NOT_SKIPPED
 129   1                              | P1SKIP_B2__NOT_SKIPPED | P1SKIP_B3__NOT_SKIPPED
 130   1                              | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED | P1SKIP_B6__SKIPPED
 131   1                              | P1SKIP_B7__NOT_SKIPPED;
 132   1              // [P1SKIP - Port 1 Skip]$
 133   1      
 134   1              // $[P1MASK - Port 1 Mask]
 135   1              /*
 136   1               // B0 (Port 1 Bit 0 Mask Value) = IGNORED (P1.0 pin logic value is
 137   1               //     ignored and will not cause a port mismatch event.)
 138   1               // B1 (Port 1 Bit 1 Mask Value) = IGNORED (P1.1 pin logic value is
 139   1               //     ignored and will not cause a port mismatch event.)
 140   1               // B2 (Port 1 Bit 2 Mask Value) = IGNORED (P1.2 pin logic value is
 141   1               //     ignored and will not cause a port mismatch event.)
 142   1               // B3 (Port 1 Bit 3 Mask Value) = IGNORED (P1.3 pin logic value is
 143   1               //     ignored and will not cause a port mismatch event.)
 144   1               // B4 (Port 1 Bit 4 Mask Value) = IGNORED (P1.4 pin logic value is
 145   1               //     ignored and will not cause a port mismatch event.)
 146   1               // B5 (Port 1 Bit 5 Mask Value) = IGNORED (P1.5 pin logic value is
 147   1               //     ignored and will not cause a port mismatch event.)
 148   1               // B6 (Port 1 Bit 6 Mask Value) = IGNORED (P1.6 pin logic value is
 149   1               //     ignored and will not cause a port mismatch event.)
 150   1               // B7 (Port 1 Bit 7 Mask Value) = IGNORED (P1.7 pin logic value is
 151   1               //     ignored and will not cause a port mismatch event.)
 152   1               */
 153   1              P1MASK = P1MASK_B0__IGNORED | P1MASK_B1__IGNORED | P1MASK_B2__IGNORED
 154   1                              | P1MASK_B3__IGNORED | P1MASK_B4__IGNORED | P1MASK_B5__IGNORED
 155   1                              | P1MASK_B6__IGNORED | P1MASK_B7__IGNORED;
 156   1              // [P1MASK - Port 1 Mask]$
 157   1      
 158   1              // $[P1MAT - Port 1 Match]
 159   1              /*
 160   1               // B0 (Port 1 Bit 0 Match Value) = HIGH (P1.0 pin logic value is compared
 161   1               //     with logic HIGH.)
 162   1               // B1 (Port 1 Bit 1 Match Value) = HIGH (P1.1 pin logic value is compared
 163   1               //     with logic HIGH.)
 164   1               // B2 (Port 1 Bit 2 Match Value) = HIGH (P1.2 pin logic value is compared
 165   1               //     with logic HIGH.)
 166   1               // B3 (Port 1 Bit 3 Match Value) = HIGH (P1.3 pin logic value is compared
 167   1               //     with logic HIGH.)
 168   1               // B4 (Port 1 Bit 4 Match Value) = HIGH (P1.4 pin logic value is compared
 169   1               //     with logic HIGH.)
 170   1               // B5 (Port 1 Bit 5 Match Value) = HIGH (P1.5 pin logic value is compared
 171   1               //     with logic HIGH.)
 172   1               // B6 (Port 1 Bit 6 Match Value) = HIGH (P1.6 pin logic value is compared
 173   1               //     with logic HIGH.)
 174   1               // B7 (Port 1 Bit 7 Match Value) = HIGH (P1.7 pin logic value is compared
 175   1               //     with logic HIGH.)
 176   1               */
 177   1              P1MAT = P1MAT_B0__HIGH | P1MAT_B1__HIGH | P1MAT_B2__HIGH | P1MAT_B3__HIGH
C51 COMPILER V9.53.0.0   INITDEVICE                                                        03/20/2017 17:10:40 PAGE 4   

 178   1                              | P1MAT_B4__HIGH | P1MAT_B5__HIGH | P1MAT_B6__HIGH | P1MAT_B7__HIGH;
 179   1              // [P1MAT - Port 1 Match]$
 180   1      
 181   1      }
 182          
 183          //================================================================================
 184          // PBCFG_0_enter_DefaultMode_from_RESET
 185          //================================================================================
 186          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 187   1              // $[XBR2 - Port I/O Crossbar 2]
 188   1              /*
 189   1               // WEAKPUD (Port I/O Weak Pullup Disable) = PULL_UPS_ENABLED (Weak
 190   1               //     Pullups enabled (except for Ports whose I/O are configured for analog
 191   1               //     mode).)
 192   1               // XBARE (Crossbar Enable) = ENABLED (Crossbar enabled.)
 193   1               // URT1E (UART1 I/O Enable) = DISABLED (UART1 I/O unavailable at Port
 194   1               //     pin.)
 195   1               // URT1RTSE (UART1 RTS Output Enable) = DISABLED (UART1 RTS1 unavailable
 196   1               //     at Port pin.)
 197   1               // URT1CTSE (UART1 CTS Input Enable) = DISABLED (UART1 CTS1 unavailable
 198   1               //     at Port pin.)
 199   1               */
 200   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 201   1                              | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 202   1                              | XBR2_URT1CTSE__DISABLED;
 203   1              // [XBR2 - Port I/O Crossbar 2]$
 204   1      
 205   1              // $[PRTDRV - Port Drive Strength]
 206   1              // [PRTDRV - Port Drive Strength]$
 207   1      
 208   1              // $[XBR0 - Port I/O Crossbar 0]
 209   1              // [XBR0 - Port I/O Crossbar 0]$
 210   1      
 211   1              // $[XBR1 - Port I/O Crossbar 1]
 212   1              // [XBR1 - Port I/O Crossbar 1]$
 213   1      
 214   1      }
 215          
 216          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     36    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
